{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = [];\nexport var counterSlice = createSlice({\n  name: \"userStore\",\n  initialState: initialState,\n  reducers: {\n    addInfoUser: function addInfoUser(state, action) {\n      return action.payload;\n    },\n    changeInfo: function changeInfo(state, action) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tikado: action.payload\n      });\n    }\n  }\n});\nvar _counterSlice$actions = counterSlice.actions,\n    addInfoUser = _counterSlice$actions.addInfoUser,\n    changeInfo = _counterSlice$actions.changeInfo;\nexport { addInfoUser, changeInfo };\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","counterSlice","name","reducers","addInfoUser","state","action","payload","changeInfo","tikado","actions","reducer"],"sources":["C:/Users/xabig/Desktop/ProyectoPiconera2/clientev2/features/userStore.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nexport const counterSlice = createSlice({\r\n  name: \"userStore\",\r\n  initialState,\r\n  reducers: {\r\n    addInfoUser: (state, action) => {\r\n      return action.payload;\r\n    },\r\n    changeInfo: (state, action) => {\r\n      return { ...state, tikado: action.payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addInfoUser, changeInfo } = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,IAAMC,YAAY,GAAGF,WAAW,CAAC;EACtCG,IAAI,EAAE,WADgC;EAEtCF,YAAY,EAAZA,YAFsC;EAGtCG,QAAQ,EAAE;IACRC,WAAW,EAAE,qBAACC,KAAD,EAAQC,MAAR,EAAmB;MAC9B,OAAOA,MAAM,CAACC,OAAd;IACD,CAHO;IAIRC,UAAU,EAAE,oBAACH,KAAD,EAAQC,MAAR,EAAmB;MAC7B,uCAAYD,KAAZ;QAAmBI,MAAM,EAAEH,MAAM,CAACC;MAAlC;IACD;EANO;AAH4B,CAAD,CAAhC;AAaA,4BAAoCN,YAAY,CAACS,OAAjD;AAAA,IAAQN,WAAR,yBAAQA,WAAR;AAAA,IAAqBI,UAArB,yBAAqBA,UAArB;;AAEP,eAAeP,YAAY,CAACU,OAA5B"},"metadata":{},"sourceType":"module"}