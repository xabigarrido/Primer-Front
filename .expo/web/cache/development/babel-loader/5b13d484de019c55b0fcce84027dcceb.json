{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport chroma from 'chroma-js';\nimport { useTheme } from \"./base/ThemeContext\";\n\nvar Divider = function Divider(_ref) {\n  var color = _ref.color,\n      inset = _ref.inset,\n      leadingInset = _ref.leadingInset,\n      trailingInset = _ref.trailingInset,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  return React.createElement(View, {\n    style: [{\n      height: 1,\n      backgroundColor: color !== null && color !== void 0 ? color : chroma(palette.surface.on).alpha(0.08).hex(),\n      marginStart: inset !== null && inset !== void 0 ? inset : leadingInset,\n      marginEnd: inset !== null && inset !== void 0 ? inset : trailingInset\n    }, style]\n  });\n};\n\nexport default Divider;","map":{"version":3,"sources":["Divider.tsx"],"names":["Divider","style","palette","useTheme","height","backgroundColor","color","chroma","marginStart","inset","marginEnd","trailingInset"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,OAAA,MAAA,MAAA,WAAA;AACA,SAAA,QAAA;;AAcA,IAAMA,OAA+B,GAAG,SAAlCA,OAAkC,CAAA,IAAA,EAA0D;EAAzD,IAAA,KAAA,GAAyD,IAAzD,CAAA,KAAA;EAAA,IAAA,KAAA,GAAyD,IAAzD,CAAA,KAAA;EAAA,IAAA,YAAA,GAAyD,IAAzD,CAAA,YAAA;EAAA,IAAA,aAAA,GAAyD,IAAzD,CAAA,aAAA;EAAA,IAA6CC,KAA7C,GAAyD,IAAzD,CAA6CA,KAA7C;;EACvC,gBAAoBE,QAApB,EAAA;EAAA,IAAQD,OAAR,aAAQA,OAAR;;EACA,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IACE,KAAK,EAAE,CACL;MACEE,MAAM,EADR,CAAA;MAEEC,eAAe,EAAEC,KAAF,KAAA,IAAEA,IAAAA,KAAF,KAAA,KAAA,CAAEA,GAAF,KAAEA,GAASC,MAAM,CAACL,OAAO,CAAPA,OAAAA,CAAPK,EAAM,CAANA,CAAAA,KAAAA,CAAAA,IAAAA,EAF5B,GAE4BA,EAF5B;MAGEC,WAAW,EAAEC,KAAF,KAAA,IAAEA,IAAAA,KAAF,KAAA,KAAA,CAAEA,GAAF,KAAEA,GAHf,YAAA;MAIEC,SAAS,EAAED,KAAF,KAAA,IAAEA,IAAAA,KAAF,KAAA,KAAA,CAAEA,GAAF,KAAEA,GAASE;IAJtB,CADK,EAAA,KAAA;EADT,CAAA,CADF;AAFF,CAAA;;AAiBA,eAAA,OAAA","sourcesContent":["import React from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport chroma from 'chroma-js';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface DividerProps {\n  color?: string | undefined;\n\n  inset?: number | undefined;\n\n  leadingInset?: number | undefined;\n\n  trailingInset?: number | undefined;\n\n  style?: StyleProp<ViewStyle> | undefined;\n}\n\nconst Divider: React.FC<DividerProps> = ({ color, inset, leadingInset, trailingInset, style }) => {\n  const { palette } = useTheme();\n  return (\n    <View\n      style={[\n        {\n          height: 1,\n          backgroundColor: color ?? chroma(palette.surface.on).alpha(0.08).hex(),\n          marginStart: inset ?? leadingInset,\n          marginEnd: inset ?? trailingInset,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default Divider;\n"]},"metadata":{},"sourceType":"module"}