{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport RNActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\n\nvar ActivityIndicator = function ActivityIndicator(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'primary' : _ref$color,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePaletteColor = usePaletteColor(color),\n      main = _usePaletteColor.main;\n\n  return React.createElement(RNActivityIndicator, _extends({}, rest, {\n    color: main\n  }));\n};\n\nexport default ActivityIndicator;","map":{"version":3,"sources":["ActivityIndicator.tsx"],"names":["ActivityIndicator","color","rest","main","usePaletteColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;AAKA,SAAA,eAAA;;AAWA,IAAMA,iBAAmD,GAAG,SAAtDA,iBAAsD,CAAA,IAAA,EAAoC;EAAnC,iBAAmC,IAAnC,CAAEC,KAAF;EAAA,IAAEA,KAAF,2BAAA,SAAA;EAAA,IAAwBC,IAAxB,4BAAmC,IAAnC;;EAC3D,uBAAiBE,eAAe,CAAhC,KAAgC,CAAhC;EAAA,IAAQD,IAAR,oBAAQA,IAAR;;EACA,OAAO,KAAA,CAAA,aAAA,CAAA,mBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;IAA+B,KAAK,EAAEA;EAAtC,CAAA,CAAA,CAAP;AAFF,CAAA;;AAKA,eAAA,iBAAA","sourcesContent":["import React from 'react';\nimport {\n  ActivityIndicator as RNActivityIndicator,\n  ActivityIndicatorProps as RNActivityIndicatorProps,\n} from 'react-native';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\n\nexport interface ActivityIndicatorProps extends Omit<RNActivityIndicatorProps, 'color'> {\n  /**\n   * The color of the spinner.\n   *\n   * @default \"primary\"\n   */\n  color?: Color;\n}\n\nconst ActivityIndicator: React.FC<ActivityIndicatorProps> = ({ color = 'primary', ...rest }) => {\n  const { main } = usePaletteColor(color);\n  return <RNActivityIndicator {...rest} color={main} />;\n};\n\nexport default ActivityIndicator;\n"]},"metadata":{},"sourceType":"module"}