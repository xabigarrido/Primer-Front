{"ast":null,"code":"import React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport chroma from 'chroma-js';\nimport { useSurfaceColorValue } from \"./hooks/use-surface-color\";\nimport { useTheme } from \"./base/ThemeContext\";\n\nvar DialogContent = function DialogContent(_ref) {\n  var children = _ref.children;\n  var theme = useTheme();\n  var backgroundColor = useSurfaceColorValue(24);\n  var scale = useMemo(function () {\n    return chroma.scale([backgroundColor, theme.palette.surface.on]);\n  }, [backgroundColor, theme.palette.surface.on]);\n  return React.createElement(View, {\n    style: [styles.container, {\n      borderColor: scale(0.08).hex()\n    }]\n  }, children);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 24,\n    paddingBottom: 20\n  }\n});\nexport default DialogContent;","map":{"version":3,"sources":["DialogContent.tsx"],"names":["DialogContent","children","theme","useTheme","backgroundColor","useSurfaceColorValue","scale","useMemo","chroma","styles","borderColor","container","paddingHorizontal","paddingBottom"],"mappings":"AAAA,OAAA,KAAA,IAAA,OAAA,QAAA,OAAA;;;AAEA,OAAA,MAAA,MAAA,WAAA;AACA,SAAA,oBAAA;AACA,SAAA,QAAA;;AAIA,IAAMA,aAA2C,GAAG,SAA9CA,aAA8C,CAAA,IAAA,EAAkB;EAAjB,IAAEC,QAAF,GAAiB,IAAjB,CAAEA,QAAF;EACnD,IAAMC,KAAK,GAAGC,QAAd,EAAA;EAEA,IAAMC,eAAe,GAAGC,oBAAoB,CAA5C,EAA4C,CAA5C;EAEA,IAAMC,KAAK,GAAGC,OAAO,CACnB;IAAA,OAAMC,MAAM,CAANA,KAAAA,CAAa,CAAA,eAAA,EAAkBN,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CADlB,EACA,CAAbM,CAAN;EAAA,CADmB,EAEnB,CAAA,eAAA,EAAkBN,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CAFpB,EAEE,CAFmB,CAArB;EAKA,OAAO,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAM,KAAK,EAAE,CAACO,MAAM,CAAP,SAAA,EAAmB;MAAEC,WAAW,EAAEJ,KAAK,CAALA,IAAK,CAALA,CAAAA,GAAAA;IAAf,CAAnB;EAAb,CAAA,EAAP,QAAO,CAAP;AAVF,CAAA;;AAaA,IAAMG,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BE,SAAS,EAAE;IACTC,iBAAiB,EADR,EAAA;IAETC,aAAa,EAFJ;EAAA;AADoB,CAAlB,CAAf;AASA,eAAA,aAAA","sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport chroma from 'chroma-js';\nimport { useSurfaceColorValue } from './hooks/use-surface-color';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface DialogContentProps {}\n\nconst DialogContent: React.FC<DialogContentProps> = ({ children }) => {\n  const theme = useTheme();\n\n  const backgroundColor = useSurfaceColorValue(24);\n\n  const scale = useMemo(\n    () => chroma.scale([backgroundColor, theme.palette.surface.on]),\n    [backgroundColor, theme.palette.surface.on]\n  );\n\n  return <View style={[styles.container, { borderColor: scale(0.08).hex() }]}>{children}</View>;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 24,\n    paddingBottom: 20,\n    // borderTopWidth: 1,\n    // borderBottomWidth: 1,\n  },\n});\n\nexport default DialogContent;\n"]},"metadata":{},"sourceType":"module"}