{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { getValidChildren } from \"./utilities\";\n\nvar Selector = function Selector(_ref) {\n  var childrenStyle = _ref.childrenStyle,\n      children = _ref.children;\n  var styles = useMemo(function () {\n    return Array.isArray(childrenStyle) ? childrenStyle.flat(Infinity) : [childrenStyle];\n  }, [childrenStyle]);\n  var validChildren = getValidChildren(children);\n  return React.createElement(React.Fragment, null, validChildren.map(function (child, index) {\n    return React.cloneElement(child, {\n      style: [child.props.style, styles.map(function (style) {\n        return typeof style === 'function' ? style(index, validChildren.length) : style;\n      })]\n    });\n  }));\n};\n\nexport default Selector;\nexport var select = function select(selector) {\n  return function (style) {\n    return function (index, length) {\n      return selector(index, length) ? style : null;\n    };\n  };\n};\nexport var firstChild = select(function (index) {\n  return index === 0;\n});\nexport var notFirstChild = select(function (index) {\n  return index !== 0;\n});\nexport var lastChild = select(function (index, length) {\n  return index === length - 1;\n});\nexport var notLastChild = select(function (index, length) {\n  return index !== length - 1;\n});\nexport var even = select(function (index) {\n  return index % 2 === 0;\n});\nexport var odd = select(function (index) {\n  return index % 2 !== 0;\n});","map":{"version":3,"sources":["Selector.tsx"],"names":["Selector","children","styles","useMemo","Array","childrenStyle","validChildren","getValidChildren","style","child","select","selector","firstChild","index","notFirstChild","lastChild","length","notLastChild","even","odd"],"mappings":"AAAA,OAAA,KAAA,IAAA,OAAA,QAAA,OAAA;AAEA,SAAA,gBAAA;;AAeA,IAAMA,QAAiC,GAAG,SAApCA,QAAoC,CAAA,IAAA,EAAiC;EAAhC,IAAA,aAAA,GAAgC,IAAhC,CAAA,aAAA;EAAA,IAAiBC,QAAjB,GAAgC,IAAhC,CAAiBA,QAAjB;EACzC,IAAMC,MAAM,GAAGC,OAAO,CACpB;IAAA,OACEC,KAAK,CAALA,OAAAA,CAAAA,aAAAA,IACIC,aAAa,CAAbA,IAAAA,CADJD,QACIC,CADJD,GAEI,CAJc,aAId,CAHN;EAAA,CADoB,EAKpB,CALF,aAKE,CALoB,CAAtB;EAQA,IAAME,aAAa,GAAGC,gBAAgB,CAAtC,QAAsC,CAAtC;EAEA,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,aAAa,CAAb,GAAA,CAAkB,UAAA,KAAA,EAAA,KAAA;IAAA,OACjB,KAAK,CAAL,YAAA,CAAA,KAAA,EAA0B;MACxBC,KAAK,EAAE,CACLC,KAAK,CAALA,KAAAA,CADK,KAAA,EAELP,MAAM,CAANA,GAAAA,CAAYM,UAAAA,KAAD;QAAA,OACT,OAAA,KAAA,KAAA,UAAA,GACIA,KAAK,CAAA,KAAA,EAAQF,aAAa,CAD9B,MACS,CADT,GAHG,KAEM;MAAA,CAAXJ,CAFK;IADiB,CAA1B,CADiB;EAAA,CAAlB,CADH,CADF;AAXF,CAAA;;AA6BA,eAAA,QAAA;AAEA,OAAO,IAAMQ,MAAM,GAChBC,SADUD,MACVC,CAAAA,QAAD;EAAA,OACCH,UAAAA,KAAD;IAAA,OACA,UAAA,KAAA,EAAA,MAAA;MAAA,OACEG,QAAQ,CAAA,KAAA,EAARA,MAAQ,CAARA,GAAAA,KAAAA,GAJG,IAGL;IAAA,CADA;EAAA,CADA;AAAA,CADK;AAMP,OAAO,IAAMC,UAAU,GAAGF,MAAM,CAAEG,UAAAA,KAAD;EAAA,OAAWA,KAAK,KAA1C,CAA0B;AAAA,CAAD,CAAzB;AAEP,OAAO,IAAMC,aAAa,GAAGJ,MAAM,CAAEG,UAAAA,KAAD;EAAA,OAAWA,KAAK,KAA7C,CAA6B;AAAA,CAAD,CAA5B;AAEP,OAAO,IAAME,SAAS,GAAGL,MAAM,CAAC,UAAA,KAAA,EAAA,MAAA;EAAA,OAAmBG,KAAK,KAAKG,MAAM,GAA5D,CAAyB;AAAA,CAAD,CAAxB;AAEP,OAAO,IAAMC,YAAY,GAAGP,MAAM,CAAC,UAAA,KAAA,EAAA,MAAA;EAAA,OAAmBG,KAAK,KAAKG,MAAM,GAA/D,CAA4B;AAAA,CAAD,CAA3B;AAEP,OAAO,IAAME,IAAI,GAAGR,MAAM,CAAEG,UAAAA,KAAD;EAAA,OAAWA,KAAK,GAALA,CAAAA,KAA/B,CAAoB;AAAA,CAAD,CAAnB;AAEP,OAAO,IAAMM,GAAG,GAAGT,MAAM,CAAEG,UAAAA,KAAD;EAAA,OAAWA,KAAK,GAALA,CAAAA,KAA9B,CAAmB;AAAA,CAAD,CAAlB","sourcesContent":["import React, { useMemo } from 'react';\nimport type { ImageStyle, StyleProp, TextStyle, ViewStyle } from 'react-native';\nimport { getValidChildren } from './utilities';\n\ntype Style = StyleProp<ViewStyle | TextStyle | ImageStyle>;\n\ntype ChildrenStyle = Style | ((index: number, length: number) => Style);\n\ntype ChildrenStyleProp = ChildrenStyle | Array<ChildrenStyleProp>;\n\nexport interface SelectorProps {\n  /**\n   * A style object to apply to each child.\n   */\n  childrenStyle?: ChildrenStyleProp;\n}\n\nconst Selector: React.FC<SelectorProps> = ({ childrenStyle, children }) => {\n  const styles = useMemo(\n    () =>\n      Array.isArray(childrenStyle)\n        ? childrenStyle.flat(Infinity)\n        : [childrenStyle],\n    [childrenStyle]\n  );\n\n  const validChildren = getValidChildren(children);\n\n  return (\n    <>\n      {validChildren.map((child, index) =>\n        React.cloneElement(child, {\n          style: [\n            child.props.style,\n            styles.map((style) =>\n              typeof style === 'function'\n                ? style(index, validChildren.length)\n                : style\n            ),\n          ],\n        })\n      )}\n    </>\n  );\n};\n\nexport default Selector;\n\nexport const select =\n  (selector: (index: number, length: number) => boolean) =>\n  (style: Style) =>\n  (index: number, length: number) =>\n    selector(index, length) ? style : null;\n\nexport const firstChild = select((index) => index === 0);\n\nexport const notFirstChild = select((index) => index !== 0);\n\nexport const lastChild = select((index, length) => index === length - 1);\n\nexport const notLastChild = select((index, length) => index !== length - 1);\n\nexport const even = select((index) => index % 2 === 0);\n\nexport const odd = select((index) => index % 2 !== 0);\n"]},"metadata":{},"sourceType":"module"}