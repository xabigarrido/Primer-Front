{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\nimport NotificationPresenter from \"./NotificationPresenterModule\";\nvar warningMessageShown = false;\nexport default function presentNotificationAsync(_x) {\n  return _presentNotificationAsync.apply(this, arguments);\n}\n\nfunction _presentNotificationAsync() {\n  _presentNotificationAsync = _asyncToGenerator(function* (content) {\n    var identifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : uuidv4();\n\n    if (__DEV__ && !warningMessageShown) {\n      console.warn('`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.');\n      warningMessageShown = true;\n    }\n\n    if (!NotificationPresenter.presentNotificationAsync) {\n      throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n    }\n\n    return yield NotificationPresenter.presentNotificationAsync(identifier, content);\n  });\n  return _presentNotificationAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/presentNotificationAsync.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAT,QAAoC,mBAApC;AACA,SAAS,EAAE,IAAI,MAAf,QAA6B,MAA7B;AAEA,OAAO,qBAAP;AAGA,IAAI,mBAAmB,GAAG,KAA1B;AAMA,wBAA8B,wBAA9B;EAAA;AAAA;;;gDAAe,WACb,OADa,EAEgB;IAAA,IAA7B,UAA6B,uEAAR,MAAM,EAAE;;IAE7B,IAAI,OAAO,IAAI,CAAC,mBAAhB,EAAqC;MACnC,OAAO,CAAC,IAAR,CACE,qMADF;MAGA,mBAAmB,GAAG,IAAtB;IACD;;IAED,IAAI,CAAC,qBAAqB,CAAC,wBAA3B,EAAqD;MACnD,MAAM,IAAI,mBAAJ,CAAwB,eAAxB,EAAyC,0BAAzC,CAAN;IACD;;IAED,aAAa,qBAAqB,CAAC,wBAAtB,CAA+C,UAA/C,EAA2D,OAA3D,CAAb;EACD,C","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { NotificationContentInput } from './Notifications.types';\n\nlet warningMessageShown = false;\n\n/**\n * @deprecated Use `scheduleNotificationAsync` with an explicit notification handler.\n * [Read more](https://expo.fyi/presenting-notifications-deprecated).\n */\nexport default async function presentNotificationAsync(\n  content: NotificationContentInput,\n  identifier: string = uuidv4()\n): Promise<string> {\n  if (__DEV__ && !warningMessageShown) {\n    console.warn(\n      '`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.'\n    );\n    warningMessageShown = true;\n  }\n\n  if (!NotificationPresenter.presentNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n  }\n\n  return await NotificationPresenter.presentNotificationAsync(identifier, content);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}