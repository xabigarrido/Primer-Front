{"ast":null,"code":"import React, { createContext, useContext, useMemo } from 'react';\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nexport var defaultWindowSizes = {\n  base: 0,\n  sm: 600,\n  md: 905,\n  lg: 1240,\n  xl: 1440\n};\nexport var WindowSizeClassContext = createContext('base');\nexport var useWindowSizeClass = function useWindowSizeClass() {\n  return useContext(WindowSizeClassContext);\n};\nexport var WindowSizeClassProvider = function WindowSizeClassProvider(_ref) {\n  var _ref$windowSizes = _ref.windowSizes,\n      windowSizes = _ref$windowSizes === void 0 ? defaultWindowSizes : _ref$windowSizes,\n      children = _ref.children;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  var windowSizeClass = useMemo(function () {\n    if (width >= windowSizes.base && width < windowSizes.sm) return 'base';\n    if (width >= windowSizes.sm && width < windowSizes.md) return 'sm';\n    if (width >= windowSizes.md && width < windowSizes.lg) return 'md';\n    if (width >= windowSizes.lg && width < windowSizes.xl) return 'lg';\n    return 'xl';\n  }, [width, windowSizes]);\n  return React.createElement(WindowSizeClassContext.Provider, {\n    value: windowSizeClass\n  }, children);\n};","map":{"version":3,"sources":["WindowSizeClassContext.tsx"],"names":["defaultWindowSizes","base","sm","md","lg","xl","WindowSizeClassContext","createContext","useWindowSizeClass","useContext","WindowSizeClassProvider","windowSizes","children","width","useWindowDimensions","windowSizeClass","useMemo"],"mappings":"AAAA,OAAA,KAAA,IAAA,aAAA,EAAA,UAAA,EAAA,OAAA,QAAA,OAAA;;AAOA,OAAO,IAAMA,kBAA+B,GAAG;EAAEC,IAAI,EAAN,CAAA;EAAWC,EAAE,EAAb,GAAA;EAAoBC,EAAE,EAAtB,GAAA;EAA6BC,EAAE,EAA/B,IAAA;EAAuCC,EAAE,EAAE;AAA3C,CAAxC;AAMP,OAAO,IAAMC,sBAAsB,GAAGC,aAAa,CAA5C,MAA4C,CAA5C;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;EAAA,OAAMC,UAAU,CAA3C,sBAA2C,CAAhB;AAAA,CAA3B;AAEP,OAAO,IAAMC,uBAA+D,GAAG,SAAlEA,uBAAkE,CAAA,IAAA,EAGzE;EAH0E,uBAG1E,IAH0E,CAC9EC,WAD8E;EAAA,IAC9EA,WAD8E,iCAAA,kBAAA;EAAA,IAE9EC,QAF8E,GAG1E,IAH0E,CAE9EA,QAF8E;;EAI9E,2BAAkBE,mBAAlB,EAAA;EAAA,IAAQD,KAAR,wBAAQA,KAAR;;EAEA,IAAME,eAAgC,GAAGC,OAAO,CAAC,YAAM;IACrD,IAAIH,KAAK,IAAIF,WAAW,CAApBE,IAAAA,IAA6BA,KAAK,GAAGF,WAAW,CAApD,EAAA,EAAyD,OAAA,MAAA;IACzD,IAAIE,KAAK,IAAIF,WAAW,CAApBE,EAAAA,IAA2BA,KAAK,GAAGF,WAAW,CAAlD,EAAA,EAAuD,OAAA,IAAA;IACvD,IAAIE,KAAK,IAAIF,WAAW,CAApBE,EAAAA,IAA2BA,KAAK,GAAGF,WAAW,CAAlD,EAAA,EAAuD,OAAA,IAAA;IACvD,IAAIE,KAAK,IAAIF,WAAW,CAApBE,EAAAA,IAA2BA,KAAK,GAAGF,WAAW,CAAlD,EAAA,EAAuD,OAAA,IAAA;IACvD,OAAA,IAAA;EAL8C,CAAA,EAM7C,CAAA,KAAA,EANH,WAMG,CAN6C,CAAhD;EAQA,OAAO,KAAA,CAAA,aAAA,CAAC,sBAAD,CAAA,QAAA,EAAA;IAAiC,KAAK,EAAEI;EAAxC,CAAA,EAAP,QAAO,CAAP;AAdK,CAAA","sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\nexport type WindowSizeClass = 'base' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport type WindowSizes = Record<WindowSizeClass, number>;\n\nexport const defaultWindowSizes: WindowSizes = { base: 0, sm: 600, md: 905, lg: 1240, xl: 1440 };\n\nexport interface WindowSizeClassProviderProps {\n  windowSizes?: WindowSizes;\n}\n\nexport const WindowSizeClassContext = createContext<WindowSizeClass>('base');\n\nexport const useWindowSizeClass = () => useContext(WindowSizeClassContext);\n\nexport const WindowSizeClassProvider: React.FC<WindowSizeClassProviderProps> = ({\n  windowSizes = defaultWindowSizes,\n  children,\n}) => {\n  const { width } = useWindowDimensions();\n\n  const windowSizeClass: WindowSizeClass = useMemo(() => {\n    if (width >= windowSizes.base && width < windowSizes.sm) return 'base';\n    if (width >= windowSizes.sm && width < windowSizes.md) return 'sm';\n    if (width >= windowSizes.md && width < windowSizes.lg) return 'md';\n    if (width >= windowSizes.lg && width < windowSizes.xl) return 'lg';\n    return 'xl';\n  }, [width, windowSizes]);\n\n  return <WindowSizeClassContext.Provider value={windowSizeClass}>{children}</WindowSizeClassContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}