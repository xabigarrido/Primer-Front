{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport { DeviceType } from \"./Device.types\";\nimport ExpoDevice from \"./ExpoDevice\";\nexport { DeviceType };\nexport var isDevice = ExpoDevice ? ExpoDevice.isDevice : true;\nexport var brand = ExpoDevice ? ExpoDevice.brand : null;\nexport var manufacturer = ExpoDevice ? ExpoDevice.manufacturer : null;\nexport var modelId = ExpoDevice ? ExpoDevice.modelId || null : null;\nexport var modelName = ExpoDevice ? ExpoDevice.modelName : null;\nexport var designName = ExpoDevice ? ExpoDevice.designName || null : null;\nexport var productName = ExpoDevice ? ExpoDevice.productName || null : null;\nexport var deviceYearClass = ExpoDevice ? ExpoDevice.deviceYearClass : null;\nexport var totalMemory = ExpoDevice ? ExpoDevice.totalMemory : null;\nexport var supportedCpuArchitectures = ExpoDevice ? ExpoDevice.supportedCpuArchitectures : null;\nexport var osName = ExpoDevice ? ExpoDevice.osName : null;\nexport var osVersion = ExpoDevice ? ExpoDevice.osVersion : null;\nexport var osBuildId = ExpoDevice ? ExpoDevice.osBuildId : null;\nexport var osInternalBuildId = ExpoDevice ? ExpoDevice.osInternalBuildId : null;\nexport var osBuildFingerprint = ExpoDevice ? ExpoDevice.osBuildFingerprint || null : null;\nexport var platformApiLevel = ExpoDevice ? ExpoDevice.platformApiLevel || null : null;\nexport var deviceName = ExpoDevice ? ExpoDevice.deviceName : null;\nexport function getDeviceTypeAsync() {\n  return _getDeviceTypeAsync.apply(this, arguments);\n}\n\nfunction _getDeviceTypeAsync() {\n  _getDeviceTypeAsync = _asyncToGenerator(function* () {\n    if (!ExpoDevice.getDeviceTypeAsync) {\n      throw new UnavailabilityError('expo-device', 'getDeviceTypeAsync');\n    }\n\n    return yield ExpoDevice.getDeviceTypeAsync();\n  });\n  return _getDeviceTypeAsync.apply(this, arguments);\n}\n\nexport function getUptimeAsync() {\n  return _getUptimeAsync.apply(this, arguments);\n}\n\nfunction _getUptimeAsync() {\n  _getUptimeAsync = _asyncToGenerator(function* () {\n    if (!ExpoDevice.getUptimeAsync) {\n      throw new UnavailabilityError('expo-device', 'getUptimeAsync');\n    }\n\n    return yield ExpoDevice.getUptimeAsync();\n  });\n  return _getUptimeAsync.apply(this, arguments);\n}\n\nexport function getMaxMemoryAsync() {\n  return _getMaxMemoryAsync.apply(this, arguments);\n}\n\nfunction _getMaxMemoryAsync() {\n  _getMaxMemoryAsync = _asyncToGenerator(function* () {\n    if (!ExpoDevice.getMaxMemoryAsync) {\n      throw new UnavailabilityError('expo-device', 'getMaxMemoryAsync');\n    }\n\n    var maxMemory = yield ExpoDevice.getMaxMemoryAsync();\n\n    if (maxMemory === -1) {\n      maxMemory = Number.MAX_SAFE_INTEGER;\n    }\n\n    return maxMemory;\n  });\n  return _getMaxMemoryAsync.apply(this, arguments);\n}\n\nexport function isRootedExperimentalAsync() {\n  return _isRootedExperimentalAsync.apply(this, arguments);\n}\n\nfunction _isRootedExperimentalAsync() {\n  _isRootedExperimentalAsync = _asyncToGenerator(function* () {\n    if (!ExpoDevice.isRootedExperimentalAsync) {\n      throw new UnavailabilityError('expo-device', 'isRootedExperimentalAsync');\n    }\n\n    return yield ExpoDevice.isRootedExperimentalAsync();\n  });\n  return _isRootedExperimentalAsync.apply(this, arguments);\n}\n\nexport function isSideLoadingEnabledAsync() {\n  return _isSideLoadingEnabledAsync.apply(this, arguments);\n}\n\nfunction _isSideLoadingEnabledAsync() {\n  _isSideLoadingEnabledAsync = _asyncToGenerator(function* () {\n    if (!ExpoDevice.isSideLoadingEnabledAsync) {\n      throw new UnavailabilityError('expo-device', 'isSideLoadingEnabledAsync');\n    }\n\n    return yield ExpoDevice.isSideLoadingEnabledAsync();\n  });\n  return _isSideLoadingEnabledAsync.apply(this, arguments);\n}\n\nexport function getPlatformFeaturesAsync() {\n  return _getPlatformFeaturesAsync.apply(this, arguments);\n}\n\nfunction _getPlatformFeaturesAsync() {\n  _getPlatformFeaturesAsync = _asyncToGenerator(function* () {\n    if (!ExpoDevice.getPlatformFeaturesAsync) {\n      return [];\n    }\n\n    return yield ExpoDevice.getPlatformFeaturesAsync();\n  });\n  return _getPlatformFeaturesAsync.apply(this, arguments);\n}\n\nexport function hasPlatformFeatureAsync(_x) {\n  return _hasPlatformFeatureAsync.apply(this, arguments);\n}\n\nfunction _hasPlatformFeatureAsync() {\n  _hasPlatformFeatureAsync = _asyncToGenerator(function* (feature) {\n    if (!ExpoDevice.hasPlatformFeatureAsync) {\n      return false;\n    }\n\n    return yield ExpoDevice.hasPlatformFeatureAsync(feature);\n  });\n  return _hasPlatformFeatureAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/Device.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport { DeviceType } from './Device.types';\nimport ExpoDevice from './ExpoDevice';\n\nexport { DeviceType };\n\nexport const isDevice: boolean = ExpoDevice ? ExpoDevice.isDevice : true;\nexport const brand: string | null = ExpoDevice ? ExpoDevice.brand : null;\nexport const manufacturer: string | null = ExpoDevice ? ExpoDevice.manufacturer : null;\nexport const modelId = ExpoDevice ? ExpoDevice.modelId || null : null;\nexport const modelName: string | null = ExpoDevice ? ExpoDevice.modelName : null;\nexport const designName: string | null = ExpoDevice ? ExpoDevice.designName || null : null;\nexport const productName: string | null = ExpoDevice ? ExpoDevice.productName || null : null;\nexport const deviceYearClass: number | null = ExpoDevice ? ExpoDevice.deviceYearClass : null;\nexport const totalMemory: number | null = ExpoDevice ? ExpoDevice.totalMemory : null;\nexport const supportedCpuArchitectures: string[] | null = ExpoDevice\n  ? ExpoDevice.supportedCpuArchitectures\n  : null;\nexport const osName: string | null = ExpoDevice ? ExpoDevice.osName : null;\nexport const osVersion: string | null = ExpoDevice ? ExpoDevice.osVersion : null;\nexport const osBuildId: string | null = ExpoDevice ? ExpoDevice.osBuildId : null;\nexport const osInternalBuildId: string | null = ExpoDevice ? ExpoDevice.osInternalBuildId : null;\nexport const osBuildFingerprint: string | null = ExpoDevice\n  ? ExpoDevice.osBuildFingerprint || null\n  : null;\nexport const platformApiLevel: number | null = ExpoDevice\n  ? ExpoDevice.platformApiLevel || null\n  : null;\nexport const deviceName: string | null = ExpoDevice ? ExpoDevice.deviceName : null;\n\nexport async function getDeviceTypeAsync(): Promise<DeviceType> {\n  if (!ExpoDevice.getDeviceTypeAsync) {\n    throw new UnavailabilityError('expo-device', 'getDeviceTypeAsync');\n  }\n  return await ExpoDevice.getDeviceTypeAsync();\n}\n\nexport async function getUptimeAsync(): Promise<number> {\n  if (!ExpoDevice.getUptimeAsync) {\n    throw new UnavailabilityError('expo-device', 'getUptimeAsync');\n  }\n  return await ExpoDevice.getUptimeAsync();\n}\n\nexport async function getMaxMemoryAsync(): Promise<number> {\n  if (!ExpoDevice.getMaxMemoryAsync) {\n    throw new UnavailabilityError('expo-device', 'getMaxMemoryAsync');\n  }\n  let maxMemory = await ExpoDevice.getMaxMemoryAsync();\n  if (maxMemory === -1) {\n    maxMemory = Number.MAX_SAFE_INTEGER;\n  }\n  return maxMemory;\n}\n\nexport async function isRootedExperimentalAsync(): Promise<boolean> {\n  if (!ExpoDevice.isRootedExperimentalAsync) {\n    throw new UnavailabilityError('expo-device', 'isRootedExperimentalAsync');\n  }\n  return await ExpoDevice.isRootedExperimentalAsync();\n}\n\nexport async function isSideLoadingEnabledAsync(): Promise<boolean> {\n  if (!ExpoDevice.isSideLoadingEnabledAsync) {\n    throw new UnavailabilityError('expo-device', 'isSideLoadingEnabledAsync');\n  }\n  return await ExpoDevice.isSideLoadingEnabledAsync();\n}\n\nexport async function getPlatformFeaturesAsync(): Promise<string[]> {\n  if (!ExpoDevice.getPlatformFeaturesAsync) {\n    return [];\n  }\n  return await ExpoDevice.getPlatformFeaturesAsync();\n}\n\nexport async function hasPlatformFeatureAsync(feature: string): Promise<boolean> {\n  if (!ExpoDevice.hasPlatformFeatureAsync) {\n    return false;\n  }\n  return await ExpoDevice.hasPlatformFeatureAsync(feature);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}