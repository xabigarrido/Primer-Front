{"ast":null,"code":"import React from 'react';\nexport function getValidChildren(children) {\n  return React.Children.toArray(children).filter(function (child) {\n    return React.isValidElement(child);\n  });\n}","map":{"version":3,"sources":["utilities.ts"],"names":["React","child"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;AAQA,OAAO,SAAA,gBAAA,CAAA,QAAA,EAAqD;EAC1D,OAAOA,KAAK,CAALA,QAAAA,CAAAA,OAAAA,CAAAA,QAAAA,EAAAA,MAAAA,CAAyCC,UAAAA,KAAD;IAAA,OAC7CD,KAAK,CAALA,cAAAA,CADF,KACEA,CAD6C;EAAA,CAAxCA,CAAP;AAGD","sourcesContent":["import React from 'react';\n\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\nexport function getValidChildren(children: React.ReactNode) {\n  return React.Children.toArray(children).filter((child) =>\n    React.isValidElement(child)\n  ) as React.ReactElement[];\n}\n"]},"metadata":{},"sourceType":"module"}