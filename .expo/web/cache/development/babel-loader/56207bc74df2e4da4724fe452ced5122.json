{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"variant\", \"color\", \"style\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport RNText from \"react-native-web/dist/exports/Text\";\nimport { useTheme } from \"./base/ThemeContext\";\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\n\nvar Text = function Text(_ref) {\n  var _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'body1' : _ref$variant,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'on-background' : _ref$color,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      typography = _useTheme.typography;\n\n  var palette = usePaletteColor(color);\n  return React.createElement(RNText, _extends({}, rest, {\n    style: [typography[variant], {\n      color: palette.main\n    }, style]\n  }));\n};\n\nexport default Text;","map":{"version":3,"sources":["Text.tsx"],"names":["Text","variant","color","rest","typography","useTheme","palette","usePaletteColor","main"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,SAAA,QAAA;AACA,SAAA,eAAA;;AAkBA,IAAMA,IAAyB,GAAG,SAA5BA,IAA4B,CAAA,IAAA,EAAoE;EAAnE,mBAAmE,IAAnE,CAAEC,OAAF;EAAA,IAAEA,OAAF,6BAAA,OAAA;EAAA,iBAAmE,IAAnE,CAAqBC,KAArB;EAAA,IAAqBA,KAArB,2BAAA,eAAA;EAAA,IAAA,KAAA,GAAmE,IAAnE,CAAA,KAAA;EAAA,IAAwDC,IAAxD,4BAAmE,IAAnE;;EACjC,gBAAuBE,QAAvB,EAAA;EAAA,IAAQD,UAAR,aAAQA,UAAR;;EACA,IAAME,OAAO,GAAGC,eAAe,CAA/B,KAA+B,CAA/B;EAEA,OAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;IAAkB,KAAK,EAAE,CAACH,UAAU,CAAX,OAAW,CAAX,EAAsB;MAAEF,KAAK,EAAEI,OAAO,CAACE;IAAjB,CAAtB,EAAA,KAAA;EAAzB,CAAA,CAAA,CAAP;AAJF,CAAA;;AAOA,eAAA,IAAA","sourcesContent":["import React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { TypographyVariant, useTheme } from './base/ThemeContext';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * The variant of the text.\n   *\n   * @default \"body1\"\n   */\n  variant?: TypographyVariant;\n\n  /**\n   * The color of the text.\n   *\n   * @default \"on-background\"\n   */\n  color?: Color;\n}\n\nconst Text: React.FC<TextProps> = ({ variant = 'body1', color = 'on-background', style, ...rest }) => {\n  const { typography } = useTheme();\n  const palette = usePaletteColor(color);\n\n  return <RNText {...rest} style={[typography[variant], { color: palette.main }, style]} />;\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}